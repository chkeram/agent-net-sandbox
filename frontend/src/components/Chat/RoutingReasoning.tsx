import { useState } from 'react';

interface RoutingReasoningProps {
  reasoning: string;
  agentName: string;
  protocol: string;
  confidence: number;
}

export function RoutingReasoning({ reasoning, agentName, protocol, confidence }: RoutingReasoningProps) {
  const [isExpanded, setIsExpanded] = useState(false);

  if (!reasoning) {
    return null;
  }

  const confidenceColor = confidence >= 0.9 ? 'text-green-600' : 
                         confidence >= 0.7 ? 'text-yellow-600' : 
                         'text-orange-600';

  return (
    <div className="mt-2 border border-gray-200 rounded-lg">
      <button
        onClick={() => setIsExpanded(!isExpanded)}
        className="w-full px-3 py-2 text-left text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-inset rounded-lg"
      >
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-2">
            <span className="text-blue-600">ðŸŽ¯</span>
            <span>Routing Decision</span>
            <span className="text-xs text-gray-500">
              â†’ {agentName} ({protocol.toUpperCase()})
            </span>
            <span className={`text-xs font-semibold ${confidenceColor}`}>
              {Math.round(confidence * 100)}%
            </span>
          </div>
          <svg
            className={`w-4 h-4 text-gray-500 transition-transform ${isExpanded ? 'rotate-180' : ''}`}
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
          </svg>
        </div>
      </button>
      
      {isExpanded && (
        <div className="px-3 pb-3 pt-1 border-t border-gray-100">
          <div className="text-sm text-gray-600 bg-gray-50 rounded p-3 whitespace-pre-wrap">
            {reasoning}
          </div>
          <div className="mt-2 text-xs text-gray-500 italic">
            This reasoning was generated by the AI orchestrator to explain why the "{agentName}" agent was selected for your query.
          </div>
        </div>
      )}
    </div>
  );
}